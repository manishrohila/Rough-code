class Solution
{
public:
    int minimumDifference(vector<int> &arr)
    {
        int n=arr.size();
        int totalSum =0;
	for(int i =0;i<n;i++)
	{
		totalSum+=arr[i];
	}
	vector<vector<bool>> dp(n,vector<bool>(totalSum+1,0));
	for(int i =0;i<n;i++) dp[i][0]=true;
	if(arr[0]<=totalSum) dp[0][arr[0]] =true;

	for(int i=1;i<n;i++)
	{
		for(int target =0;target<=totalSum;target++)
		{
			bool notTake=dp[i-1][target];
			bool take = false;
			if(arr[i]<=target) take = dp[i-1][target-arr[i]];
			dp[i][target]=take|notTake;
		}
	}

	int mini = 1e9;
	for(int s1=0;s1<=totalSum/2;s1++)
	{
		if(dp[n-1][s1]==true)
		{
			mini = min(mini,abs(s1-(totalSum-s1)));
		}
	}
	return mini;
    }
};
